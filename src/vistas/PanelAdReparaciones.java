/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import com.toedter.calendar.JTextFieldDateEditor;
import controladores.ControladorPrincipal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import modelo.JLabelAriel;

/**
 *
 * @author ari_0
 */
public class PanelAdReparaciones extends JPanelCustom {

    private int numPlanilla = 0;  //Permanece en 0 siempre y cuando no se venga desde la vista Nueva Planilla
    int idReparacion = 0;
    private ControladorPrincipal controlador;
    
    public PanelAdReparaciones() {
        //Constructor que no debería usarse
        iniciarCosasEnComun();
        initComponents();
    }

    PanelAdReparaciones(int numPlanilla) {
        //Constructor para agregar una reparación
        this.numPlanilla = numPlanilla; //Se utilizará a la hora de guardar la planilla y cargar los datos
        initComponents();
        iniciarCosasEnComun();
        inicializarLabelData(numPlanilla);
    }

    PanelAdReparaciones(int numPlanilla, int idReparacion){
    //Constructor para una Reparación a modificar
        initComponents();
        this.iniciarCosasEnComun();
        this.numPlanilla = numPlanilla;
        inicializarLabelData(numPlanilla);
        this.cargarDatosReparacion(idReparacion);
        this.idReparacion = idReparacion;
        this.jButtonAgregarRep.setText("Actualizar Reparación");
    }
    
    private void iniciarCosasEnComun(){
        this.controlador = ControladorPrincipal.getInstancia();
        JTextFieldDateEditor editor = (JTextFieldDateEditor) this.jDateChooserFinalizado.getDateEditor();
        editor.setEditable(false);
        this.jRadioButtonReparacion.setSelected(true); //En principio se tratará de una reparación
        this.jComboBoxPeriodo.setEnabled(false); //Se activará si se selecciona mantención
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupTipo = new javax.swing.ButtonGroup();
        jFrameInfo = new javax.swing.JFrame();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButtonInfo = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldImporte = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jRadioButtonReparacion = new javax.swing.JRadioButton();
        jRadioButtonMantenimiento = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jCheckBoxNotificar = new javax.swing.JCheckBox();
        jCheckBoxCompletada = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jButtonCancelarRep = new javax.swing.JButton();
        jButtonAgregarRep = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabelNumPlanilla = new javax.swing.JLabel();
        jLabelMarcaModelo = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabelPatente = new javax.swing.JLabel();
        jComboBoxPeriodo = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jDateChooserFinalizado = new com.toedter.calendar.JDateChooser();
        jButtonBorrar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDescripcion = new javax.swing.JTextArea();

        jFrameInfo.setAlwaysOnTop(true);
        jFrameInfo.setLocationByPlatform(true);
        jFrameInfo.setResizable(false);
        jFrameInfo.setSize(new java.awt.Dimension(825, 415));
        jFrameInfo.setType(java.awt.Window.Type.POPUP);

        jLabel24.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel24.setText("Información para el uso de la vista que sirve para Administrar Reparaciones");

        jLabel25.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel25.setText("* Se recomienda hacer descripciones completas y simples: ");

        jLabel26.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel26.setText("* Esta vista permite administrar Reparaciones de dos tipos (Mantenimientos o Reparaciones)");

        jLabel27.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel27.setText("* La longitud de la descripción es infinita");

        jLabel28.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel28.setText("* Cuando se selecciona hacer una reparación de tipo mantención se activa el periodo de días");

        jLabel29.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 0, 51));
        jLabel29.setText("* Las notificaciones son por reparaciones incompletas o mantenciones incompletas y por realizar");

        jButton1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jButton1.setText("Aceptar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel30.setText("* Cuando pasan los días indicados el sistema notifica al usuario para hacer una nueva mantención");

        jLabel31.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel31.setText("Ej: \"Cambio de aceite y filtro. Costo de repuestos: Acceite $3500 - $Correa $5000\"");

        jLabel32.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 0, 51));
        jLabel32.setText("* El atributo \"notificar\" se puede destildar:");

        jLabel33.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 0, 51));
        jLabel33.setText("Al destildar no se notifica de mantenciones por realizar ni reparaciones incompletas");

        javax.swing.GroupLayout jFrameInfoLayout = new javax.swing.GroupLayout(jFrameInfo.getContentPane());
        jFrameInfo.getContentPane().setLayout(jFrameInfoLayout);
        jFrameInfoLayout.setHorizontalGroup(
            jFrameInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrameInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrameInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrameInfoLayout.createSequentialGroup()
                        .addGroup(jFrameInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32)
                            .addGroup(jFrameInfoLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jFrameInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel31)
                                    .addComponent(jLabel33))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(jFrameInfoLayout.createSequentialGroup()
                        .addGroup(jFrameInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addComponent(jLabel30)
                            .addComponent(jLabel24)
                            .addComponent(jLabel26)
                            .addComponent(jLabel27)
                            .addComponent(jLabel29)
                            .addComponent(jLabel25))
                        .addGap(0, 3, Short.MAX_VALUE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jFrameInfoLayout.setVerticalGroup(
            jFrameInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrameInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24)
                .addGap(18, 18, 18)
                .addComponent(jLabel26)
                .addGap(18, 18, 18)
                .addComponent(jLabel27)
                .addGap(18, 18, 18)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel31)
                .addGap(23, 23, 23)
                .addComponent(jLabel28)
                .addGap(18, 18, 18)
                .addComponent(jLabel30)
                .addGap(18, 18, 18)
                .addComponent(jLabel29)
                .addGroup(jFrameInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrameInfoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addContainerGap())
                    .addGroup(jFrameInfoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel33)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel1.setText("Planilla:");

        jButtonInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/info-icon2.png"))); // NOI18N
        jButtonInfo.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/info-icon2.png"))); // NOI18N
        jButtonInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInfoActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel2.setText("Vehículo:");

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel3.setText("Información:");

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel4.setText("Descripción:");

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel5.setText("Importe:");

        jTextFieldImporte.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel6.setText("Tipo Reparación:");

        buttonGroupTipo.add(jRadioButtonReparacion);
        jRadioButtonReparacion.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jRadioButtonReparacion.setText("Reparación");

        buttonGroupTipo.add(jRadioButtonMantenimiento);
        jRadioButtonMantenimiento.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jRadioButtonMantenimiento.setText("Mantenimiento");
        jRadioButtonMantenimiento.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButtonMantenimientoStateChanged(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel7.setText("Fecha finalizado:");

        jCheckBoxNotificar.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jCheckBoxNotificar.setText("Notificar");

        jCheckBoxCompletada.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jCheckBoxCompletada.setText("Completada");

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel8.setText("Aviso de Mantención o de Reparación incompleta:");

        jButtonCancelarRep.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jButtonCancelarRep.setText("Descartar");
        jButtonCancelarRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarRepActionPerformed(evt);
            }
        });

        jButtonAgregarRep.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jButtonAgregarRep.setText("Agregar Reparación");
        jButtonAgregarRep.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAgregarRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarRepActionPerformed(evt);
            }
        });

        jLabelNumPlanilla.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabelNumPlanilla.setText("000000");

        jLabelMarcaModelo.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabelMarcaModelo.setText("Marca-Modelo");

        jLabel11.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel11.setText("Patente:");

        jLabelPatente.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabelPatente.setText("AB1234CD");

        jComboBoxPeriodo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Meses");

        jDateChooserFinalizado.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        jDateChooserFinalizado.setMinimumSize(new java.awt.Dimension(155, 27));

        jButtonBorrar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonBorrar.setText("Borrar Fecha");
        jButtonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Periodo");

        jTextAreaDescripcion.setColumns(20);
        jTextAreaDescripcion.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jTextAreaDescripcion.setRows(5);
        jTextAreaDescripcion.setMaximumSize(new java.awt.Dimension(300, 200));
        jScrollPane1.setViewportView(jTextAreaDescripcion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelNumPlanilla)
                        .addGap(107, 107, 107)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelMarcaModelo)
                        .addGap(71, 71, 71)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelPatente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                        .addComponent(jButtonInfo))
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonCancelarRep)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAgregarRep))
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(jCheckBoxNotificar)
                                        .addGap(18, 18, 18)
                                        .addComponent(jCheckBoxCompletada))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jDateChooserFinalizado, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonBorrar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextFieldImporte, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(417, 417, 417)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jComboBoxPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel9))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jRadioButtonReparacion)
                                                .addGap(18, 18, 18)
                                                .addComponent(jRadioButtonMantenimiento)))))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel1)
                        .addComponent(jLabelNumPlanilla)
                        .addComponent(jLabel2)
                        .addComponent(jLabelMarcaModelo)
                        .addComponent(jLabel11)
                        .addComponent(jLabelPatente))
                    .addComponent(jButtonInfo))
                .addGap(35, 35, 35)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 86, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldImporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jCheckBoxNotificar)
                    .addComponent(jCheckBoxCompletada))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jRadioButtonMantenimiento)
                    .addComponent(jRadioButtonReparacion))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jDateChooserFinalizado, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBorrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelarRep)
                    .addComponent(jButtonAgregarRep))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAgregarRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarRepActionPerformed
        //Se debe consultar si proviene esta vista desde una planilla o desde "modificar reparación" --> 
        JLabel label = new JLabelAriel("Con la reparación completada debe ingresar una fecha de finalizada");
        if(!this.jCheckBoxCompletada.isSelected()) //No está seleccionado--> Rep. no complet. --> no hay problema con la fecha de finalizada
            if(this.idReparacion != 0) //Estamos modificando una reparación
                actualizarReparacion();
            else //Estamos agregando una reparación a una planilla
                guardarReparacion(this.numPlanilla);
        else{ //La reparación está marcada como completada --> se deberá corroborar si está seteada la fecha de finalizada
            if(this.jDateChooserFinalizado.getDate() == null)
                JOptionPane.showMessageDialog(null, label, "¡INFO!", JOptionPane.WARNING_MESSAGE);
            else{ //
                if(this.idReparacion != 0) // True si estamos modificando una reparación
                    actualizarReparacion();
                else
                    guardarReparacion(this.numPlanilla);
            }
        }
    }//GEN-LAST:event_jButtonAgregarRepActionPerformed

    private void jButtonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarActionPerformed
        // Elimina la fecha del jDateChooser
        this.jDateChooserFinalizado.cleanup();
        this.jDateChooserFinalizado.setDate(null);
    }//GEN-LAST:event_jButtonBorrarActionPerformed

    private void jRadioButtonMantenimientoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButtonMantenimientoStateChanged
        //Como se trata de una mantención entonces debo establecer un periodo - Activo dicha casilla automaticamente
        if(this.jRadioButtonMantenimiento.isSelected())
            this.jComboBoxPeriodo.setEnabled(true);
        else
            this.jComboBoxPeriodo.setEnabled(false); //Creo que no es necesaria esta línea pero por las dudas la dejamos
    }//GEN-LAST:event_jRadioButtonMantenimientoStateChanged

    private void jButtonCancelarRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarRepActionPerformed
        this.controlador.cerrarPanelSeleccionado();
    }//GEN-LAST:event_jButtonCancelarRepActionPerformed

    private void jButtonInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInfoActionPerformed
        // Abre el Frame de JFrameInfo para mostrar info de la vista (Para que sirve para que no sirve).
        this.jFrameInfo.setVisible(true);
    }//GEN-LAST:event_jButtonInfoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.jFrameInfo.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupTipo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAgregarRep;
    private javax.swing.JButton jButtonBorrar;
    private javax.swing.JButton jButtonCancelarRep;
    private javax.swing.JButton jButtonInfo;
    private javax.swing.JCheckBox jCheckBoxCompletada;
    private javax.swing.JCheckBox jCheckBoxNotificar;
    private javax.swing.JComboBox<Integer> jComboBoxPeriodo;
    private com.toedter.calendar.JDateChooser jDateChooserFinalizado;
    private javax.swing.JFrame jFrameInfo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelMarcaModelo;
    private javax.swing.JLabel jLabelNumPlanilla;
    private javax.swing.JLabel jLabelPatente;
    private javax.swing.JRadioButton jRadioButtonMantenimiento;
    private javax.swing.JRadioButton jRadioButtonReparacion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextArea jTextAreaDescripcion;
    private javax.swing.JTextField jTextFieldImporte;
    // End of variables declaration//GEN-END:variables

    private void actualizarReparacion() {
        //Actualiza la reparación, los datos ya están corroborados antes de llamar a este método
        String descripcion = this.jTextAreaDescripcion.getText();
        long importe = Long.valueOf(this.jTextFieldImporte.getText());
        if(!(this.jTextFieldImporte.getText().equals("")) && descripcion != null){ //Datos válidos, se puede guardar
            String sql = "UPDATE reparacion SET descripcion = ?, importe = ?, completada = ?, tipo = ?, fecha_terminado = ?, "
                    + "periodo = ?, notificar = ? WHERE idreparacion = '"+this.idReparacion+"' ";
            try{
                PreparedStatement ps = this.controlador.obtenerConexion().prepareStatement(sql);
                ps.setString(1, descripcion);
                ps.setLong(2, importe);
                ps.setBoolean(3, this.jCheckBoxCompletada.isSelected());
                if(this.jRadioButtonMantenimiento.isSelected())
                    ps.setObject(4, "mantenimiento", java.sql.Types.OTHER);
                else
                    ps.setObject(4, "reparacion", java.sql.Types.OTHER);
                if(this.jCheckBoxCompletada.isSelected())  // Entonces tengo fecha de terminada
                    ps.setDate(5, new java.sql.Date(this.jDateChooserFinalizado.getDate().getTime()));
                else
                    ps.setNull(5, java.sql.Types.DATE);
                if(this.jRadioButtonMantenimiento.isSelected()) //Entonces tengo periodo
                    ps.setInt(6, (int) this.jComboBoxPeriodo.getSelectedItem());
                else
                    ps.setInt(6, 15); //Por defecto el periodo tiene ese tiempo
                ps.setBoolean(7, this.jCheckBoxNotificar.isSelected()); //Atributo Notificar
                ps.executeUpdate();
                JLabel label = new JLabelAriel("Reparación actualizada");
                JOptionPane.showMessageDialog(null, label, "¡ATENCIÓN!", JOptionPane.INFORMATION_MESSAGE);
            }catch(SQLException ex){
                JLabel label = new JLabelAriel("No se pudo actualizar la reparación: "+ex.getMessage());
                JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.WARNING_MESSAGE);
            }
        }
        else{
            JLabel label = new JLabelAriel("No se puede actualizar la reparación porque la descripción o el importe son nulos");
            JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void guardarReparacion(int numPlanilla) {
        int siguienteIdRep = obtenerUltimoId()+1;
        String query = "INSERT INTO reparacion VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
        String tipo_rep;
        if (this.jTextFieldImporte.getText().equals("")) {
            JLabel label = new JLabelAriel("Debe ingresar un importe ");
            JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.WARNING_MESSAGE);
            return; //Para que no se cierre
        } else {
            try {
                PreparedStatement ps = this.controlador.obtenerConexion().prepareStatement(query);
                this.controlador.obtenerConexion().setAutoCommit(false);
                ps.setInt(1, siguienteIdRep);
                ps.setString(2, this.jTextAreaDescripcion.getText()); //Si es nulo nose que pasa 
                ps.setInt(3, Integer.valueOf(this.jTextFieldImporte.getText())); //El importe
                ps.setBoolean(4, this.jCheckBoxCompletada.isSelected()); //Si está completada --> true
                if (this.jRadioButtonMantenimiento.isSelected()) {
                    tipo_rep = "mantenimiento";
                } else {
                    tipo_rep = "reparacion";
                }
                ps.setObject(5, tipo_rep, java.sql.Types.OTHER); //reparacion o mantenimiento - Es un ENUM
                ps.setInt(6, numPlanilla);
                if (this.jDateChooserFinalizado.getDate() != null) {
                    ps.setDate(7, new java.sql.Date(this.jDateChooserFinalizado.getDate().getTime()));
                } else {
                    ps.setDate(7, null);
                }
                ps.setInt(8, Integer.parseInt(""+this.jComboBoxPeriodo.getSelectedItem()));
                ps.setBoolean(9, this.jCheckBoxNotificar.isSelected());
                int resultado = ps.executeUpdate();
                this.controlador.obtenerConexion().commit(); //Todo bien si pasa esta línea - falta hacerle el catch al commit()
                JLabel labelOk = new JLabelAriel(" Reparacion agregada con exito ");
                JOptionPane.showMessageDialog(null, labelOk, " TODO BIEN ", JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException ex) {
                JLabel label = new JLabelAriel("Error al guardar Reparación " + ex.getMessage());
                JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.WARNING_MESSAGE);
            }
            try {
                this.controlador.obtenerConexion().rollback(); 
//Algo fallo entonces hay que volver las 2 operaciones para atrás sino dsps no se puede hacer nada
            } catch (SQLException ex1) {
                JLabel label = new JLabelAriel(ex1.getMessage());
                JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.WARNING_MESSAGE);
            }
        }
        this.controlador.cerrarPanelSeleccionado();
    }

    private void inicializarLabelData(int numPlanilla) {
        //Método para setear los label con los datos de la planilla a modificar
        this.jLabelNumPlanilla.setText(""+numPlanilla);
        cargarDatos(numPlanilla);
    }
    
    private void cargarDatos(int numPlanilla){
        String marca = null, modelo = null, patente = null;
        String consulta = "SELECT v.marca, v.modelo, v.patente from vehiculo as v inner join planilla as p "
                + "ON v.idvehiculo = p.idvehiculo where p.idplanilla = '"+numPlanilla+"' ";
        int i = 0;
        
        Connection co = this.controlador.obtenerConexion();
        try {
            Statement st = co.createStatement();
            ResultSet rs = st.executeQuery(consulta);
            while(rs.next()){
                marca = rs.getString(1);
                modelo = rs.getString(2);
                patente = rs.getString(3);
                this.jLabelMarcaModelo.setText(marca+" "+modelo);
                this.jLabelPatente.setText(patente); 
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: "+ex.getMessage());
        }
        while(i < 36){ // 36 meses = 3 años
            i++;
            this.jComboBoxPeriodo.addItem(i); //Empiezo por 15 días
        }
    }

    private void cargarDatosReparacion(int idReparacion){
        //Cargo los datos de la reparación a modificar
        String query = "SELECT r.descripcion, r.importe, r.fecha_terminado, r.tipo, periodo, r.completada, r.notificar FROM reparacion AS r "
                + "WHERE r.idreparacion = '"+idReparacion+"' ";
        String tipo_rep;
        try{
            Statement st = this.controlador.obtenerConexion().createStatement();
            ResultSet rs = st.executeQuery(query);
            while(rs.next()){
                this.jTextAreaDescripcion.setText(rs.getString(1)); //La descripción
                this.jTextFieldImporte.setText(""+rs.getInt(2));
                if(rs.getDate(3) != null)
                    this.jDateChooserFinalizado.setDate(rs.getDate(3));
                tipo_rep = rs.getString(4);
                if(tipo_rep.equals("mantenimiento")){
                    this.jRadioButtonMantenimiento.setSelected(true);
                    this.jRadioButtonReparacion.setSelected(false);
                }
                else{
                    this.jRadioButtonReparacion.setSelected(true);
                    this.jRadioButtonMantenimiento.setSelected(false);
                }
                this.jComboBoxPeriodo.setSelectedIndex(Integer.valueOf(rs.getString(5))-1);
                this.jCheckBoxCompletada.setSelected(rs.getBoolean(6));
                this.jCheckBoxNotificar.setSelected(rs.getBoolean(7));
            }
            
        }catch(SQLException ex){
            JLabel label = new JLabelAriel(ex.getMessage());
            JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    @Override
    public boolean sePuedeCerrar() {
        // falta completar los requerimientos para saber si se puede cerrar la vista y devolver true
        //Ver ejemplo en "Nueva Planilla"
        return true;
    }

    @Override
    public void onFocus() {
        //Si tenemos una reparación para modificar no es necesario hacer nada porque el único dato (idPlanilla) nunca debe cambiar
        // Si es una reparación nueva creo que tampoco se debería modificar los datos de la vista
    }

    private int obtenerUltimoId() {
        int idRep = 0;
        String consulta = "SELECT MAX(idreparacion) FROM reparacion";
        Statement st;
        try {
            st = this.controlador.obtenerConexion().createStatement();
            ResultSet rs = st.executeQuery(consulta);
            while(rs.next()){
                idRep = rs.getInt(1);
            }
        } catch (SQLException ex) {
            //
        }
        
        return idRep;
    }
}
